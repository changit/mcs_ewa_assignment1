package localhost._8080.bank_system_core_auth;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.6.1
 * 2013-01-17T22:01:34.089+05:30
 * Generated source version: 2.6.1
 * 
 */
@WebService(targetNamespace = "http://localhost:8080/bank-system-core-auth", name = "AuthService")
@XmlSeeAlso({ObjectFactory.class})
public interface AuthService {

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "authenticate", targetNamespace = "http://localhost:8080/bank-system-core-auth", className = "localhost._8080.bank_system_core_auth.Authenticate")
    @WebMethod
    @ResponseWrapper(localName = "authenticateResponse", targetNamespace = "http://localhost:8080/bank-system-core-auth", className = "localhost._8080.bank_system_core_auth.AuthenticateResponse")
    public localhost._8080.bank_system_core_auth.LoginResponse authenticate(
        @WebParam(name = "userName", targetNamespace = "")
        java.lang.String userName,
        @WebParam(name = "hash", targetNamespace = "")
        java.lang.String hash,
        @WebParam(name = "corporateId", targetNamespace = "")
        java.lang.String corporateId
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "verifyToken", targetNamespace = "http://localhost:8080/bank-system-core-auth", className = "localhost._8080.bank_system_core_auth.VerifyToken")
    @WebMethod
    @ResponseWrapper(localName = "verifyTokenResponse", targetNamespace = "http://localhost:8080/bank-system-core-auth", className = "localhost._8080.bank_system_core_auth.VerifyTokenResponse")
    public boolean verifyToken(
        @WebParam(name = "userId", targetNamespace = "")
        java.lang.Long userId,
        @WebParam(name = "token", targetNamespace = "")
        java.lang.String token
    ) throws UserNotFoundException_Exception;
}
